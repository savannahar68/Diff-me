Which algorithm to use
Which ADT to use
What are the functions reqired
what actually is required from each flag and what are it's input and output
Scheduling of work

Elaboration of these points :- 

What is my data ?
    -dir -> files -> lines -> string -> character
    -Main data - lines(string) 
    
How to strore data ?
    The lines will be stored in charcter pointer and will be malloced with each new line.We will use DCL for saving the whole file
    
Data structure to use ?
    Currently keeping things in mind ,like inserting in between nodes , searching , traversing back and forth, i have decided to go with doubly circular 
    list as ADT.Also as ill be using Longest common subsequence algorithm ill try to use tree data structure for it,else do it using normal iteration
    
Data ?
    file name
    dir name
    string
    lines
    binary files
    
Inputs ?
    Directories - (look for files inside them and apply the same operations as that of files)
    files   - (look for the flags and perform the algorithm on the file , according to the output of the matrix and the flag display the output to the user)
    binary files - (display only if the files differ or are same)
    flags   - (according to the flags the result will change, check for flag like -i -b -w -r at the starting while saving lines to Data structure , after LCS check
    for the flags  -c -y and give the output of LCS to them as input)
    If no flag then run the diff in default mode switch default
    
Operation ?
    -Check the command and store all the flags which are set and the file names ,even check if the command eneterd has directory and -r flag
    -Read from the file and save to the ADT according to the -i -w -b flags
    -Each flag will have their own function
    -After saving both the files call the LCS algorithm giving it lines from both the files as parameter one by one until the end of both  the files
    -The output of the LCS algorithm will be given to the -y or -c or the defualtdiffoutput function method
    -Display the output on the screen
    
Functions : 
    -DCL ADT and tree ADT(*)
    functions - 
        init()
        writelines()
        getflags()
        setflags()
        flagi()
        flagw()
        flagb()
        LCS()
        comparelines()
        flagc()
        flagy()
        defaultdiffotput()
        for patch - 
        patch()
        validitpatchcheck()

Patch- File one becomes as file 2
    Output of diff will be input to it.Check for the validity and then read the file and make changes to the file accordingly
    Has 2 functions
        validpatchcheck - will check if the patch is valid,if not display proper message
        patch - read the file, get the content and make the changes in file 1 accordingly.Make sure the position of text to be added and also delete 
        the extra text of the first file. 